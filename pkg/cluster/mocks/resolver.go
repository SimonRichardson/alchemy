// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/SimonRichardson/discourse/pkg/cluster (interfaces: Resolver)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	net "net"
	reflect "reflect"
)

// MockResolver is a mock of Resolver interface
type MockResolver struct {
	ctrl     *gomock.Controller
	recorder *MockResolverMockRecorder
}

// MockResolverMockRecorder is the mock recorder for MockResolver
type MockResolverMockRecorder struct {
	mock *MockResolver
}

// NewMockResolver creates a new mock instance
func NewMockResolver(ctrl *gomock.Controller) *MockResolver {
	mock := &MockResolver{ctrl: ctrl}
	mock.recorder = &MockResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockResolver) EXPECT() *MockResolverMockRecorder {
	return m.recorder
}

// LookupIPAddr mocks base method
func (m *MockResolver) LookupIPAddr(arg0 context.Context, arg1 string) ([]net.IPAddr, error) {
	ret := m.ctrl.Call(m, "LookupIPAddr", arg0, arg1)
	ret0, _ := ret[0].([]net.IPAddr)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LookupIPAddr indicates an expected call of LookupIPAddr
func (mr *MockResolverMockRecorder) LookupIPAddr(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookupIPAddr", reflect.TypeOf((*MockResolver)(nil).LookupIPAddr), arg0, arg1)
}
